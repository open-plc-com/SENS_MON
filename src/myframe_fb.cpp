#include "myframe_fb.h"
#include "empty.xpm"
#include "exit.xpm"
#include "play.xpm"
#include "setting_tools.xpm"
MyFrameFB::MyFrameFB( wxWindow *parent, wxWindowID id, const wxString &title, const wxPoint &pos, const wxSize &size, long style ) : wxFrame( parent, id, title, pos, size, style ){
this->SetSizeHints( wxDefaultSize, wxDefaultSize );
this->SetFont( wxFont( 10, 70, 90, 90, false, wxEmptyString ) );
m_menubar1 = new wxMenuBar( 0 );
m_menu_file = new wxMenu();
wxMenuItem *m_menuItem3;
m_menuItem3 = new wxMenuItem( m_menu_file, ID_TOOL_EXIT, wxString( wxT( "E&xit\tAlt+X" ) ) , wxEmptyString, wxITEM_NORMAL );
m_menu_file->Append( m_menuItem3 );
m_menubar1->Append( m_menu_file, wxT( "&File" ) );
m_menu_tool = new wxMenu();
wxMenuItem *m_menu_connect;
m_menu_connect = new wxMenuItem( m_menu_tool, ID_TOOL__CONNECT, wxString( wxT( "Connect\tAlt+N" ) ) , wxEmptyString, wxITEM_NORMAL );
m_menu_tool->Append( m_menu_connect );
wxMenuItem *m_menu_disconnect;
m_menu_disconnect = new wxMenuItem( m_menu_tool, ID_TOOL__DISCONNECT, wxString( wxT( "Disconnect\tAlt+I" ) ) , wxEmptyString, wxITEM_NORMAL );
m_menu_tool->Append( m_menu_disconnect );
wxMenuItem *m_separator1;
m_separator1 = m_menu_tool->AppendSeparator();
wxMenuItem *m_menu_com_config;
m_menu_com_config = new wxMenuItem( m_menu_tool, ID_TOOL_COM_CONFIG, wxString( wxT( "COM Config\tF4" ) ) , wxEmptyString, wxITEM_NORMAL );
m_menu_tool->Append( m_menu_com_config );
m_menubar1->Append( m_menu_tool, wxT( "&Tools" ) );
this->SetMenuBar( m_menubar1 );
m_statusBar1 = this->CreateStatusBar( 1, wxST_SIZEGRIP, wxID_ANY );
wxBoxSizer *bSizer1;
bSizer1 = new wxBoxSizer( wxVERTICAL );
m_panel1 = new wxPanel( this, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL );
wxBoxSizer *bSizer2;
bSizer2 = new wxBoxSizer( wxVERTICAL );
wxBoxSizer *bSizer3;
bSizer3 = new wxBoxSizer( wxVERTICAL );
m_panel2 = new wxPanel( m_panel1, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL );
wxBoxSizer *bSizer4;
bSizer4 = new wxBoxSizer( wxHORIZONTAL );
m_toolBar = new wxToolBar( m_panel2, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTB_FLAT|wxTB_HORIZONTAL );
m_toolBar->SetBackgroundColour( wxSystemSettings::GetColour( wxSYS_COLOUR_MENU ) );
m_toolBar->AddTool( ID_TOOL_EXIT, wxT( "tool" ), wxBitmap( exit_xpm ), wxNullBitmap, wxITEM_NORMAL, wxT( "Exit" ), wxEmptyString );
m_toolBar->AddSeparator();
m_toolBar->AddTool( ID_TOOL_RUN, wxT( "tool" ), wxBitmap( play_xpm ), wxNullBitmap, wxITEM_NORMAL, wxT( "Start/Stop" ), wxEmptyString );
m_toolBar->AddSeparator();
m_staticText9 = new wxStaticText( m_toolBar, wxID_ANY, wxT( " COM Port: " ), wxDefaultPosition, wxDefaultSize, 0 );
m_staticText9->Wrap( -1 );
m_toolBar->AddControl( m_staticText9 );
m_text_com = new wxTextCtrl( m_toolBar, wxID_ANY, wxEmptyString, wxDefaultPosition, wxSize( 60,-1 ), wxTE_READONLY );
m_toolBar->AddControl( m_text_com );
m_toolBar->AddTool( ID_TOOL_COM_CONFIG, wxT( "tool" ), wxBitmap( setting_tools_xpm ), wxNullBitmap, wxITEM_NORMAL, wxT( "COM Configure" ), wxEmptyString );
m_bitmap_com_status = new wxStaticBitmap( m_toolBar, wxID_ANY, wxBitmap( empty_xpm ), wxDefaultPosition, wxDefaultSize, 0 );
m_toolBar->AddControl( m_bitmap_com_status );
m_toolBar->AddSeparator();
m_toolBar->Realize();
bSizer4->Add( m_toolBar, 1, wxALIGN_CENTER_VERTICAL, 5 );
m_panel2->SetSizer( bSizer4 );
m_panel2->Layout();
bSizer4->Fit( m_panel2 );
bSizer3->Add( m_panel2, 1, wxEXPAND, 5 );
m_staticline1 = new wxStaticLine( m_panel1, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxLI_HORIZONTAL );
bSizer3->Add( m_staticline1, 0, wxEXPAND, 5 );
bSizer2->Add( bSizer3, 0, wxEXPAND, 5 );
wxBoxSizer *bSizer5;
bSizer5 = new wxBoxSizer( wxVERTICAL );
wxGridSizer *gSizer1;
gSizer1 = new wxGridSizer( 3, 3, 0, 0 );
m_panel3 = new wxPanel( m_panel1, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER|wxTAB_TRAVERSAL );
wxBoxSizer *bSizer6;
bSizer6 = new wxBoxSizer( wxVERTICAL );
m_panel3->SetSizer( bSizer6 );
m_panel3->Layout();
bSizer6->Fit( m_panel3 );
gSizer1->Add( m_panel3, 1, wxEXPAND, 5 );
m_panel4 = new wxPanel( m_panel1, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER|wxTAB_TRAVERSAL );
wxBoxSizer *bSizer7;
bSizer7 = new wxBoxSizer( wxVERTICAL );
m_panel4->SetSizer( bSizer7 );
m_panel4->Layout();
bSizer7->Fit( m_panel4 );
gSizer1->Add( m_panel4, 1, wxEXPAND, 5 );
m_panel5 = new wxPanel( m_panel1, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER|wxTAB_TRAVERSAL );
wxBoxSizer *bSizer8;
bSizer8 = new wxBoxSizer( wxVERTICAL );
m_panel5->SetSizer( bSizer8 );
m_panel5->Layout();
bSizer8->Fit( m_panel5 );
gSizer1->Add( m_panel5, 1, wxEXPAND, 5 );
m_panel6 = new wxPanel( m_panel1, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER|wxTAB_TRAVERSAL );
wxBoxSizer *bSizer9;
bSizer9 = new wxBoxSizer( wxVERTICAL );
m_panel6->SetSizer( bSizer9 );
m_panel6->Layout();
bSizer9->Fit( m_panel6 );
gSizer1->Add( m_panel6, 1, wxEXPAND, 5 );
m_panel7 = new wxPanel( m_panel1, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER|wxTAB_TRAVERSAL );
wxBoxSizer *bSizer10;
bSizer10 = new wxBoxSizer( wxVERTICAL );
m_panel7->SetSizer( bSizer10 );
m_panel7->Layout();
bSizer10->Fit( m_panel7 );
gSizer1->Add( m_panel7, 1, wxEXPAND, 5 );
m_panel8 = new wxPanel( m_panel1, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER|wxTAB_TRAVERSAL );
wxBoxSizer *bSizer11;
bSizer11 = new wxBoxSizer( wxVERTICAL );
wxFlexGridSizer *fgSizer1;
fgSizer1 = new wxFlexGridSizer( 8, 2, 0, 0 );
fgSizer1->SetFlexibleDirection( wxBOTH );
fgSizer1->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
m_text1 = new wxStaticText( m_panel8, wxID_ANY, wxT( "Label" ), wxDefaultPosition, wxDefaultSize, 0 );
m_text1->Wrap( -1 );
fgSizer1->Add( m_text1, 0, wxALIGN_CENTER_VERTICAL|wxALIGN_RIGHT|wxALL, 5 );
m_val1 = new wxTextCtrl( m_panel8, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, 0 );
fgSizer1->Add( m_val1, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5 );
m_text2 = new wxStaticText( m_panel8, wxID_ANY, wxT( "Label" ), wxDefaultPosition, wxDefaultSize, 0 );
m_text2->Wrap( -1 );
fgSizer1->Add( m_text2, 0, wxALIGN_CENTER_VERTICAL|wxALIGN_RIGHT|wxBOTTOM|wxRIGHT|wxLEFT, 5 );
m_val2 = new wxTextCtrl( m_panel8, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, 0 );
fgSizer1->Add( m_val2, 0, wxALIGN_CENTER_VERTICAL|wxBOTTOM|wxRIGHT|wxLEFT, 5 );
m_text3 = new wxStaticText( m_panel8, wxID_ANY, wxT( "Label" ), wxDefaultPosition, wxDefaultSize, 0 );
m_text3->Wrap( -1 );
fgSizer1->Add( m_text3, 0, wxALIGN_CENTER_VERTICAL|wxALIGN_RIGHT|wxBOTTOM|wxRIGHT|wxLEFT, 5 );
m_val3 = new wxTextCtrl( m_panel8, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, 0 );
fgSizer1->Add( m_val3, 0, wxALIGN_CENTER_VERTICAL|wxBOTTOM|wxRIGHT|wxLEFT, 5 );
bSizer11->Add( fgSizer1, 1, wxEXPAND, 5 );
m_panel8->SetSizer( bSizer11 );
m_panel8->Layout();
bSizer11->Fit( m_panel8 );
gSizer1->Add( m_panel8, 1, wxEXPAND, 5 );
m_panel9 = new wxPanel( m_panel1, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER|wxTAB_TRAVERSAL );
wxBoxSizer *bSizer12;
bSizer12 = new wxBoxSizer( wxVERTICAL );
m_panel9->SetSizer( bSizer12 );
m_panel9->Layout();
bSizer12->Fit( m_panel9 );
gSizer1->Add( m_panel9, 1, wxEXPAND, 5 );
m_panel10 = new wxPanel( m_panel1, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER|wxTAB_TRAVERSAL );
wxBoxSizer *bSizer13;
bSizer13 = new wxBoxSizer( wxVERTICAL );
m_panel10->SetSizer( bSizer13 );
m_panel10->Layout();
bSizer13->Fit( m_panel10 );
gSizer1->Add( m_panel10, 1, wxEXPAND, 5 );
m_panel11 = new wxPanel( m_panel1, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER|wxTAB_TRAVERSAL );
wxBoxSizer *bSizer14;
bSizer14 = new wxBoxSizer( wxVERTICAL );
wxFlexGridSizer *fgSizer2;
fgSizer2 = new wxFlexGridSizer( 2, 2, 0, 0 );
fgSizer2->SetFlexibleDirection( wxBOTH );
fgSizer2->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
m_text4 = new wxStaticText( m_panel11, wxID_ANY, wxT( "Label" ), wxDefaultPosition, wxDefaultSize, 0 );
m_text4->Wrap( -1 );
fgSizer2->Add( m_text4, 0, wxALIGN_CENTER_VERTICAL|wxALIGN_RIGHT|wxALL, 5 );
m_val4 = new wxTextCtrl( m_panel11, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, 0 );
fgSizer2->Add( m_val4, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5 );
m_text5 = new wxStaticText( m_panel11, wxID_ANY, wxT( "Label" ), wxDefaultPosition, wxDefaultSize, 0 );
m_text5->Wrap( -1 );
fgSizer2->Add( m_text5, 0, wxALIGN_CENTER_VERTICAL|wxALIGN_RIGHT|wxBOTTOM|wxRIGHT|wxLEFT, 5 );
m_val5 = new wxTextCtrl( m_panel11, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, 0 );
fgSizer2->Add( m_val5, 0, wxALIGN_CENTER_VERTICAL|wxBOTTOM|wxRIGHT|wxLEFT, 5 );
m_text6 = new wxStaticText( m_panel11, wxID_ANY, wxT( "Label" ), wxDefaultPosition, wxDefaultSize, 0 );
m_text6->Wrap( -1 );
fgSizer2->Add( m_text6, 0, wxALIGN_CENTER_VERTICAL|wxALIGN_RIGHT|wxBOTTOM|wxRIGHT|wxLEFT, 5 );
m_val6 = new wxTextCtrl( m_panel11, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, 0 );
fgSizer2->Add( m_val6, 0, wxALIGN_CENTER_VERTICAL|wxBOTTOM|wxRIGHT|wxLEFT, 5 );
m_text7 = new wxStaticText( m_panel11, wxID_ANY, wxT( "Label" ), wxDefaultPosition, wxDefaultSize, 0 );
m_text7->Wrap( -1 );
fgSizer2->Add( m_text7, 0, wxALIGN_CENTER_VERTICAL|wxALIGN_RIGHT|wxBOTTOM|wxRIGHT|wxLEFT, 5 );
m_val7 = new wxTextCtrl( m_panel11, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, 0 );
fgSizer2->Add( m_val7, 0, wxALIGN_CENTER_VERTICAL|wxBOTTOM|wxRIGHT|wxLEFT, 5 );
bSizer14->Add( fgSizer2, 1, wxEXPAND, 5 );
m_panel11->SetSizer( bSizer14 );
m_panel11->Layout();
bSizer14->Fit( m_panel11 );
gSizer1->Add( m_panel11, 1, wxEXPAND, 5 );
bSizer5->Add( gSizer1, 1, wxEXPAND, 5 );
bSizer2->Add( bSizer5, 1, wxEXPAND, 5 );
m_log = new wxTextCtrl( m_panel1, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, wxHSCROLL|wxTE_MULTILINE );
bSizer2->Add( m_log, 1, wxALL|wxEXPAND, 5 );
m_panel1->SetSizer( bSizer2 );
m_panel1->Layout();
bSizer2->Fit( m_panel1 );
bSizer1->Add( m_panel1, 1, wxEXPAND, 5 );
this->SetSizer( bSizer1 );
this->Layout();
this->Centre( wxBOTH ); }
MyFrameFB::~MyFrameFB(){}
Set_COM_FB::Set_COM_FB( wxWindow *parent, wxWindowID id, const wxString &title, const wxPoint &pos, const wxSize &size, long style ) : wxDialog( parent, id, title, pos, size, style ){
this->SetSizeHints( wxDefaultSize, wxDefaultSize );
wxBoxSizer *bSizer15;
bSizer15 = new wxBoxSizer( wxVERTICAL );
m_panel12 = new wxPanel( this, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL );
wxBoxSizer *bSizer16;
bSizer16 = new wxBoxSizer( wxVERTICAL );
wxFlexGridSizer *fgSizer3;
fgSizer3 = new wxFlexGridSizer( 2, 2, 0, 0 );
fgSizer3->SetFlexibleDirection( wxBOTH );
fgSizer3->SetNonFlexibleGrowMode( wxFLEX_GROWMODE_SPECIFIED );
m_staticText10 = new wxStaticText( m_panel12, wxID_ANY, wxT( "COM-port :" ), wxDefaultPosition, wxDefaultSize, 0 );
m_staticText10->Wrap( -1 );
fgSizer3->Add( m_staticText10, 0, wxTOP|wxBOTTOM|wxRIGHT|wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL, 5 );
wxArrayString m_com_choiceChoices;
m_com_choice = new wxChoice( m_panel12, wxID_ANY, wxDefaultPosition, wxDefaultSize, m_com_choiceChoices, 0 );
m_com_choice->SetSelection( 0 );
fgSizer3->Add( m_com_choice, 0, wxALL|wxALIGN_CENTER_VERTICAL, 5 );
m_staticText11 = new wxStaticText( m_panel12, wxID_ANY, wxT( "Speed :" ), wxDefaultPosition, wxDefaultSize, 0 );
m_staticText11->Wrap( -1 );
fgSizer3->Add( m_staticText11, 0, wxTOP|wxBOTTOM|wxRIGHT|wxALIGN_CENTER_VERTICAL|wxALIGN_RIGHT, 5 );
wxString m_speed_choiceChoices[] = { wxT( "300" ), wxT( "600" ), wxT( "1200" ), wxT( "2400" ), wxT( "4800" ), wxT( "9600" ), wxT( "19200" ), wxT( "38400" ), wxT( "57600" ), wxT( "115200" ), wxT( "230400" ), wxT( "460800" ), wxT( "921600" ) };
int m_speed_choiceNChoices = sizeof( m_speed_choiceChoices ) / sizeof( wxString );
m_speed_choice = new wxChoice( m_panel12, wxID_ANY, wxDefaultPosition, wxDefaultSize, m_speed_choiceNChoices, m_speed_choiceChoices, 0 );
m_speed_choice->SetSelection( 9 );
fgSizer3->Add( m_speed_choice, 0, wxALL|wxALIGN_CENTER_VERTICAL, 5 );
bSizer16->Add( fgSizer3, 1, wxEXPAND|wxRIGHT|wxLEFT, 5 );
m_sdbSizer2 = new wxStdDialogButtonSizer();
m_sdbSizer2OK = new wxButton( m_panel12, wxID_OK );
m_sdbSizer2->AddButton( m_sdbSizer2OK );
m_sdbSizer2Cancel = new wxButton( m_panel12, wxID_CANCEL );
m_sdbSizer2->AddButton( m_sdbSizer2Cancel );
m_sdbSizer2->Realize();
bSizer16->Add( m_sdbSizer2, 0, wxTOP|wxBOTTOM|wxLEFT|wxALIGN_RIGHT, 5 );
m_panel12->SetSizer( bSizer16 );
m_panel12->Layout();
bSizer16->Fit( m_panel12 );
bSizer15->Add( m_panel12, 1, wxEXPAND, 5 );
this->SetSizer( bSizer15 );
this->Layout();
bSizer15->Fit( this );
this->Centre( wxBOTH );
m_com_choice->Connect( wxEVT_COMMAND_CHOICE_SELECTED, wxCommandEventHandler( Set_COM_FB::OnChoiseCOM ), NULL, this );
m_sdbSizer2OK->Connect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( Set_COM_FB::OnOkButton ), NULL, this ); }
Set_COM_FB::~Set_COM_FB(){
m_com_choice->Disconnect( wxEVT_COMMAND_CHOICE_SELECTED, wxCommandEventHandler( Set_COM_FB::OnChoiseCOM ), NULL, this );
m_sdbSizer2OK->Disconnect( wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler( Set_COM_FB::OnOkButton ), NULL, this ); }
